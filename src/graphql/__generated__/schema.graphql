"""Marks an element of a GraphQL schema as no longer supported."""
directive @deprecated(
  """
  Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).
  """
  reason: String = "No longer supported"
) on ARGUMENT_DEFINITION | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION

"""
Directs the executor to include this field or fragment only when the `if` argument is true.
"""
directive @include(
  """Included when true."""
  if: Boolean!
) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"""
Indicates exactly one field must be supplied and this field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

"""
Directs the executor to skip this field or fragment when the `if` argument is true.
"""
directive @skip(
  """Skipped when true."""
  if: Boolean!
) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"""Exposes a URL that specifies the behavior of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behavior of this scalar."""
  url: String!
) on SCALAR

"""
A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.
"""
type __Directive {
  name: String!
  description: String
  isRepeatable: Boolean!
  locations: [__DirectiveLocation!]!
  args(includeDeprecated: Boolean = false): [__InputValue!]!
}

"""
A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.
"""
enum __DirectiveLocation {
  """Location adjacent to a query operation."""
  QUERY

  """Location adjacent to a mutation operation."""
  MUTATION

  """Location adjacent to a subscription operation."""
  SUBSCRIPTION

  """Location adjacent to a field."""
  FIELD

  """Location adjacent to a fragment definition."""
  FRAGMENT_DEFINITION

  """Location adjacent to a fragment spread."""
  FRAGMENT_SPREAD

  """Location adjacent to an inline fragment."""
  INLINE_FRAGMENT

  """Location adjacent to a variable definition."""
  VARIABLE_DEFINITION

  """Location adjacent to a schema definition."""
  SCHEMA

  """Location adjacent to a scalar definition."""
  SCALAR

  """Location adjacent to an object type definition."""
  OBJECT

  """Location adjacent to a field definition."""
  FIELD_DEFINITION

  """Location adjacent to an argument definition."""
  ARGUMENT_DEFINITION

  """Location adjacent to an interface definition."""
  INTERFACE

  """Location adjacent to a union definition."""
  UNION

  """Location adjacent to an enum definition."""
  ENUM

  """Location adjacent to an enum value definition."""
  ENUM_VALUE

  """Location adjacent to an input object type definition."""
  INPUT_OBJECT

  """Location adjacent to an input object field definition."""
  INPUT_FIELD_DEFINITION
}

"""
One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.
"""
type __EnumValue {
  name: String!
  description: String
  isDeprecated: Boolean!
  deprecationReason: String
}

"""
Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.
"""
type __Field {
  name: String!
  description: String
  args(includeDeprecated: Boolean = false): [__InputValue!]!
  type: __Type!
  isDeprecated: Boolean!
  deprecationReason: String
}

"""
Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.
"""
type __InputValue {
  name: String!
  description: String
  type: __Type!

  """
  A GraphQL-formatted string representing the default value for this input value.
  """
  defaultValue: String
  isDeprecated: Boolean!
  deprecationReason: String
}

"""
A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.
"""
type __Schema {
  description: String

  """A list of all types supported by this server."""
  types: [__Type!]!

  """The type that query operations will be rooted at."""
  queryType: __Type!

  """
  If this server supports mutation, the type that mutation operations will be rooted at.
  """
  mutationType: __Type

  """
  If this server support subscription, the type that subscription operations will be rooted at.
  """
  subscriptionType: __Type

  """A list of all directives supported by this server."""
  directives: [__Directive!]!
}

"""
The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.

Depending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.
"""
type __Type {
  kind: __TypeKind!
  name: String
  description: String
  specifiedByURL: String
  fields(includeDeprecated: Boolean = false): [__Field!]
  interfaces: [__Type!]
  possibleTypes: [__Type!]
  enumValues(includeDeprecated: Boolean = false): [__EnumValue!]
  inputFields(includeDeprecated: Boolean = false): [__InputValue!]
  ofType: __Type
  isOneOf: Boolean
}

"""An enum describing what kind of type a given `__Type` is."""
enum __TypeKind {
  """Indicates this type is a scalar."""
  SCALAR

  """
  Indicates this type is an object. `fields` and `interfaces` are valid fields.
  """
  OBJECT

  """
  Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.
  """
  INTERFACE

  """Indicates this type is a union. `possibleTypes` is a valid field."""
  UNION

  """Indicates this type is an enum. `enumValues` is a valid field."""
  ENUM

  """
  Indicates this type is an input object. `inputFields` is a valid field.
  """
  INPUT_OBJECT

  """Indicates this type is a list. `ofType` is a valid field."""
  LIST

  """Indicates this type is a non-null. `ofType` is a valid field."""
  NON_NULL
}
directive @contentSourceMaps on QUERY

"""
[See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/appSettings)
"""
type AppSettings implements Entry & _Node {
  _id: ID!
  appTitle(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  footerNavigation(locale: String, preview: Boolean, where: ComponentNavigationFilter): ComponentNavigation
  headerNavigation(locale: String, preview: Boolean, where: ComponentNavigationFilter): ComponentNavigation
  internalId(locale: String): String
  linkedFrom(allowedLocales: [String]): AppSettingsLinkingCollections
  sys: Sys!
}

type AppSettingsCollection {
  items: [AppSettings]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AppSettingsFilter {
  AND: [AppSettingsFilter]
  OR: [AppSettingsFilter]
  appTitle: String
  appTitle_contains: String
  appTitle_exists: Boolean
  appTitle_in: [String]
  appTitle_not: String
  appTitle_not_contains: String
  appTitle_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  footerNavigation: cfComponentNavigationNestedFilter
  footerNavigation_exists: Boolean
  headerNavigation: cfComponentNavigationNestedFilter
  headerNavigation_exists: Boolean
  internalId: String
  internalId_contains: String
  internalId_exists: Boolean
  internalId_in: [String]
  internalId_not: String
  internalId_not_contains: String
  internalId_not_in: [String]
  sys: SysFilter
}

type AppSettingsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum AppSettingsOrder {
  appTitle_ASC
  appTitle_DESC
  internalId_ASC
  internalId_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  componentAuthorCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentAuthorCollection
  componentCtaCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentCtaCollection
  componentFeatureCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentFeatureCollection
  componentHeroCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentHeroCollection
  componentImageGalleryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentImageGalleryCollection
  componentLinkCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentLinkCollection
  componentNavigationItemCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentNavigationItemCollection
  componentSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentSectionCollection
  componentSeoCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentSeoCollection
  componentServiceCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentServiceCollection
  componentServiceOverviewCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentServiceOverviewCollection
  componentStepCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentStepCollection
  componentTestimonialCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentTestimonialCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageBlogPostCollection
  pageServiceCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageServiceCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
A component representing an author with details and social links. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentAuthor)
"""
type ComponentAuthor implements Entry & _Node {
  _id: ID!
  bio(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentAuthorLinkingCollections
  name(locale: String): String
  profilePicture(locale: String, preview: Boolean): Asset
  socialLinksCollection(limit: Int = 100, locale: String, order: [ComponentAuthorSocialLinksCollectionOrder], preview: Boolean, skip: Int = 0, where: ComponentLinkFilter): ComponentAuthorSocialLinksCollection
  sys: Sys!
}

type ComponentAuthorCollection {
  items: [ComponentAuthor]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentAuthorFilter {
  AND: [ComponentAuthorFilter]
  OR: [ComponentAuthorFilter]
  bio: String
  bio_contains: String
  bio_exists: Boolean
  bio_in: [String]
  bio_not: String
  bio_not_contains: String
  bio_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  profilePicture_exists: Boolean
  socialLinks: cfComponentLinkNestedFilter
  socialLinksCollection_exists: Boolean
  sys: SysFilter
}

type ComponentAuthorLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [ComponentAuthorLinkingCollectionsPageBlogPostCollectionOrder], preview: Boolean, skip: Int = 0): PageBlogPostCollection
}

enum ComponentAuthorLinkingCollectionsPageBlogPostCollectionOrder {
  description_ASC
  description_DESC
  featured_ASC
  featured_DESC
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentAuthorOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ComponentAuthorSocialLinksCollection {
  items: [ComponentLink]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum ComponentAuthorSocialLinksCollectionOrder {
  displayText_ASC
  displayText_DESC
  href_ASC
  href_DESC
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
A call-to-action component for guiding user actions. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentCTA)
"""
type ComponentCta implements Entry & _Node {
  _id: ID!
  backgroundImage(locale: String, preview: Boolean): Asset
  buttonLink(locale: String): String
  buttonText(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  heading(locale: String): String
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentCtaLinkingCollections
  subheading(locale: String): String
  sys: Sys!
}

type ComponentCtaCollection {
  items: [ComponentCta]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentCtaFilter {
  AND: [ComponentCtaFilter]
  OR: [ComponentCtaFilter]
  backgroundImage_exists: Boolean
  buttonLink: String
  buttonLink_contains: String
  buttonLink_exists: Boolean
  buttonLink_in: [String]
  buttonLink_not: String
  buttonLink_not_contains: String
  buttonLink_not_in: [String]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  heading: String
  heading_contains: String
  heading_exists: Boolean
  heading_in: [String]
  heading_not: String
  heading_not_contains: String
  heading_not_in: [String]
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  subheading: String
  subheading_contains: String
  subheading_exists: Boolean
  subheading_in: [String]
  subheading_not: String
  subheading_not_contains: String
  subheading_not_in: [String]
  sys: SysFilter
}

type ComponentCtaLinkingCollections {
  componentHeroCollection(limit: Int = 100, locale: String, order: [ComponentCtaLinkingCollectionsComponentHeroCollectionOrder], preview: Boolean, skip: Int = 0): ComponentHeroCollection
  componentSectionCollection(limit: Int = 100, locale: String, order: [ComponentCtaLinkingCollectionsComponentSectionCollectionOrder], preview: Boolean, skip: Int = 0): ComponentSectionCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [ComponentCtaLinkingCollectionsPageBlogPostCollectionOrder], preview: Boolean, skip: Int = 0): PageBlogPostCollection
  pageHomeCollection(limit: Int = 100, locale: String, order: [ComponentCtaLinkingCollectionsPageHomeCollectionOrder], preview: Boolean, skip: Int = 0): PageHomeCollection
  pageServiceCollection(limit: Int = 100, locale: String, order: [ComponentCtaLinkingCollectionsPageServiceCollectionOrder], preview: Boolean, skip: Int = 0): PageServiceCollection
}

enum ComponentCtaLinkingCollectionsComponentHeroCollectionOrder {
  heading_ASC
  heading_DESC
  internalName_ASC
  internalName_DESC
  subheading_ASC
  subheading_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentCtaLinkingCollectionsComponentSectionCollectionOrder {
  internalName_ASC
  internalName_DESC
  subtitle_ASC
  subtitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentCtaLinkingCollectionsPageBlogPostCollectionOrder {
  description_ASC
  description_DESC
  featured_ASC
  featured_DESC
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentCtaLinkingCollectionsPageHomeCollectionOrder {
  internalName_ASC
  internalName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentCtaLinkingCollectionsPageServiceCollectionOrder {
  internalName_ASC
  internalName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentCtaOrder {
  buttonLink_ASC
  buttonLink_DESC
  buttonText_ASC
  buttonText_DESC
  heading_ASC
  heading_DESC
  internalName_ASC
  internalName_DESC
  subheading_ASC
  subheading_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
A component to display a single frequently asked question. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentFAQ)
"""
type ComponentFaq implements Entry & _Node {
  _id: ID!
  answer(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentFaqLinkingCollections
  question(locale: String): String
  sys: Sys!
}

type ComponentFaqCollection {
  items: [ComponentFaq]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentFaqFilter {
  AND: [ComponentFaqFilter]
  OR: [ComponentFaqFilter]
  answer: String
  answer_contains: String
  answer_exists: Boolean
  answer_in: [String]
  answer_not: String
  answer_not_contains: String
  answer_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  question: String
  question_contains: String
  question_exists: Boolean
  question_in: [String]
  question_not: String
  question_not_contains: String
  question_not_in: [String]
  sys: SysFilter
}

type ComponentFaqLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageServiceCollection(limit: Int = 100, locale: String, order: [ComponentFaqLinkingCollectionsPageServiceCollectionOrder], preview: Boolean, skip: Int = 0): PageServiceCollection
}

enum ComponentFaqLinkingCollectionsPageServiceCollectionOrder {
  internalName_ASC
  internalName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentFaqOrder {
  internalName_ASC
  internalName_DESC
  question_ASC
  question_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
A component to showcase features or highlights. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentFeature)
"""
type ComponentFeature implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  icon(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkHref(locale: String): String
  linkText(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentFeatureLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type ComponentFeatureCollection {
  items: [ComponentFeature]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentFeatureFilter {
  AND: [ComponentFeatureFilter]
  OR: [ComponentFeatureFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  icon_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  linkHref: String
  linkHref_contains: String
  linkHref_exists: Boolean
  linkHref_in: [String]
  linkHref_not: String
  linkHref_not_contains: String
  linkHref_not_in: [String]
  linkText: String
  linkText_contains: String
  linkText_exists: Boolean
  linkText_in: [String]
  linkText_not: String
  linkText_not_contains: String
  linkText_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ComponentFeatureLinkingCollections {
  componentSectionCollection(limit: Int = 100, locale: String, order: [ComponentFeatureLinkingCollectionsComponentSectionCollectionOrder], preview: Boolean, skip: Int = 0): ComponentSectionCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageHomeCollection(limit: Int = 100, locale: String, order: [ComponentFeatureLinkingCollectionsPageHomeCollectionOrder], preview: Boolean, skip: Int = 0): PageHomeCollection
}

enum ComponentFeatureLinkingCollectionsComponentSectionCollectionOrder {
  internalName_ASC
  internalName_DESC
  subtitle_ASC
  subtitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentFeatureLinkingCollectionsPageHomeCollectionOrder {
  internalName_ASC
  internalName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentFeatureOrder {
  internalName_ASC
  internalName_DESC
  linkHref_ASC
  linkHref_DESC
  linkText_ASC
  linkText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
A hero section for pages with a heading, subheading, and call-to-action. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentHero)
"""
type ComponentHero implements Entry & _Node {
  _id: ID!
  backgroundImage(locale: String, preview: Boolean): Asset
  callToAction(locale: String, preview: Boolean, where: ComponentCtaFilter): ComponentCta
  contentfulMetadata: ContentfulMetadata!
  heading(locale: String): String
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentHeroLinkingCollections
  subheading(locale: String): String
  sys: Sys!
}

type ComponentHeroCollection {
  items: [ComponentHero]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentHeroFilter {
  AND: [ComponentHeroFilter]
  OR: [ComponentHeroFilter]
  backgroundImage_exists: Boolean
  callToAction: cfComponentCtaNestedFilter
  callToAction_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  heading: String
  heading_contains: String
  heading_exists: Boolean
  heading_in: [String]
  heading_not: String
  heading_not_contains: String
  heading_not_in: [String]
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  subheading: String
  subheading_contains: String
  subheading_exists: Boolean
  subheading_in: [String]
  subheading_not: String
  subheading_not_contains: String
  subheading_not_in: [String]
  sys: SysFilter
}

type ComponentHeroLinkingCollections {
  componentSectionCollection(limit: Int = 100, locale: String, order: [ComponentHeroLinkingCollectionsComponentSectionCollectionOrder], preview: Boolean, skip: Int = 0): ComponentSectionCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageHomeCollection(limit: Int = 100, locale: String, order: [ComponentHeroLinkingCollectionsPageHomeCollectionOrder], preview: Boolean, skip: Int = 0): PageHomeCollection
}

enum ComponentHeroLinkingCollectionsComponentSectionCollectionOrder {
  internalName_ASC
  internalName_DESC
  subtitle_ASC
  subtitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentHeroLinkingCollectionsPageHomeCollectionOrder {
  internalName_ASC
  internalName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentHeroOrder {
  heading_ASC
  heading_DESC
  internalName_ASC
  internalName_DESC
  subheading_ASC
  subheading_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
A component to display a gallery of images with optional captions. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentImageGallery)
"""
type ComponentImageGallery implements Entry & _Node {
  _id: ID!
  captions(locale: String): [String]
  contentfulMetadata: ContentfulMetadata!
  imagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentImageGalleryLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type ComponentImageGalleryCollection {
  items: [ComponentImageGallery]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentImageGalleryFilter {
  AND: [ComponentImageGalleryFilter]
  OR: [ComponentImageGalleryFilter]
  captions_contains_all: [String]
  captions_contains_none: [String]
  captions_contains_some: [String]
  captions_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  imagesCollection_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ComponentImageGalleryLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentImageGalleryOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
A generic component for handling external and internal links with optional display text and image asset. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentLink)
"""
type ComponentLink implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  displayText(locale: String): String
  href(locale: String): String
  image(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentLinkLinkingCollections
  name(locale: String): String
  sys: Sys!
}

type ComponentLinkCollection {
  items: [ComponentLink]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentLinkFilter {
  AND: [ComponentLinkFilter]
  OR: [ComponentLinkFilter]
  contentfulMetadata: ContentfulMetadataFilter
  displayText: String
  displayText_contains: String
  displayText_exists: Boolean
  displayText_in: [String]
  displayText_not: String
  displayText_not_contains: String
  displayText_not_in: [String]
  href: String
  href_contains: String
  href_exists: Boolean
  href_in: [String]
  href_not: String
  href_not_contains: String
  href_not_in: [String]
  image_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

type ComponentLinkLinkingCollections {
  componentAuthorCollection(limit: Int = 100, locale: String, order: [ComponentLinkLinkingCollectionsComponentAuthorCollectionOrder], preview: Boolean, skip: Int = 0): ComponentAuthorCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentLinkLinkingCollectionsComponentAuthorCollectionOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentLinkOrder {
  displayText_ASC
  displayText_DESC
  href_ASC
  href_DESC
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
A navigation component for the site. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentNavigation)
"""
type ComponentNavigation implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  itemsCollection(limit: Int = 100, locale: String, order: [ComponentNavigationItemsCollectionOrder], preview: Boolean, skip: Int = 0, where: ComponentNavigationItemFilter): ComponentNavigationItemsCollection
  linkedFrom(allowedLocales: [String]): ComponentNavigationLinkingCollections
  location(locale: String): String
  sys: Sys!
}

type ComponentNavigationCollection {
  items: [ComponentNavigation]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentNavigationFilter {
  AND: [ComponentNavigationFilter]
  OR: [ComponentNavigationFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  items: cfComponentNavigationItemNestedFilter
  itemsCollection_exists: Boolean
  location: String
  location_contains: String
  location_exists: Boolean
  location_in: [String]
  location_not: String
  location_not_contains: String
  location_not_in: [String]
  sys: SysFilter
}

"""
Navigation item used for menus and links [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentNavigationItem)
"""
type ComponentNavigationItem implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  icon(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentNavigationItemLinkingCollections
  name(locale: String): String
  slug(locale: String): String
  sys: Sys!
}

type ComponentNavigationItemCollection {
  items: [ComponentNavigationItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentNavigationItemFilter {
  AND: [ComponentNavigationItemFilter]
  OR: [ComponentNavigationItemFilter]
  contentfulMetadata: ContentfulMetadataFilter
  icon_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}

type ComponentNavigationItemLinkingCollections {
  componentNavigationCollection(limit: Int = 100, locale: String, order: [ComponentNavigationItemLinkingCollectionsComponentNavigationCollectionOrder], preview: Boolean, skip: Int = 0): ComponentNavigationCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentNavigationItemLinkingCollectionsComponentNavigationCollectionOrder {
  internalName_ASC
  internalName_DESC
  location_ASC
  location_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentNavigationItemOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ComponentNavigationItemsCollection {
  items: [ComponentNavigationItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum ComponentNavigationItemsCollectionOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ComponentNavigationLinkingCollections {
  appSettingsCollection(limit: Int = 100, locale: String, order: [ComponentNavigationLinkingCollectionsAppSettingsCollectionOrder], preview: Boolean, skip: Int = 0): AppSettingsCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentNavigationLinkingCollectionsAppSettingsCollectionOrder {
  appTitle_ASC
  appTitle_DESC
  internalId_ASC
  internalId_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentNavigationOrder {
  internalName_ASC
  internalName_DESC
  location_ASC
  location_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
A component to display a step-by-step process or workflow. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentProcess)
"""
type ComponentProcess implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentProcessLinkingCollections
  stepsCollection(limit: Int = 100, locale: String, order: [ComponentProcessStepsCollectionOrder], preview: Boolean, skip: Int = 0, where: ComponentStepFilter): ComponentProcessStepsCollection
  sys: Sys!
  title(locale: String): String
}

type ComponentProcessCollection {
  items: [ComponentProcess]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentProcessFilter {
  AND: [ComponentProcessFilter]
  OR: [ComponentProcessFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  steps: cfComponentStepNestedFilter
  stepsCollection_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ComponentProcessLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageHomeCollection(limit: Int = 100, locale: String, order: [ComponentProcessLinkingCollectionsPageHomeCollectionOrder], preview: Boolean, skip: Int = 0): PageHomeCollection
}

enum ComponentProcessLinkingCollectionsPageHomeCollectionOrder {
  internalName_ASC
  internalName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentProcessOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type ComponentProcessStepsCollection {
  items: [ComponentStep]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum ComponentProcessStepsCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
A generic section component for grouping other components with optional background and heading. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentSection)
"""
type ComponentSection implements Entry & _Node {
  _id: ID!
  backgroundImage(locale: String, preview: Boolean): Asset
  componentsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0, where: ComponentSectionComponentsFilter): ComponentSectionComponentsCollection
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentSectionLinkingCollections
  subtitle(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type ComponentSectionCollection {
  items: [ComponentSection]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ComponentSectionComponentsCollection {
  items: [ComponentSectionComponentsItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentSectionComponentsFilter {
  AND: [ComponentSectionComponentsFilter]
  OR: [ComponentSectionComponentsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}

union ComponentSectionComponentsItem = ComponentCta | ComponentFeature | ComponentHero | ComponentServiceOverview | ComponentTestimonial

input ComponentSectionFilter {
  AND: [ComponentSectionFilter]
  OR: [ComponentSectionFilter]
  backgroundImage_exists: Boolean
  components: cfcomponentsMultiTypeNestedFilter
  componentsCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ComponentSectionLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentSectionOrder {
  internalName_ASC
  internalName_DESC
  subtitle_ASC
  subtitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
SEO settings for a page [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/componentSeo)
"""
type ComponentSeo implements Entry & _Node {
  _id: ID!
  canonicalUrl(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ComponentSeoLinkingCollections
  metaDescription(locale: String): String
  metaTitle(locale: String): String
  name(locale: String): String
  openGraphDescription(locale: String): String
  openGraphImage(locale: String, preview: Boolean): Asset
  openGraphTitle(locale: String): String
  robotsFollow(locale: String): Boolean
  robotsIndex(locale: String): Boolean
  schemaJsonLd(locale: String): String
  schemaType(locale: String): String
  slug(locale: String): String
  sys: Sys!
  twitterCardType(locale: String): String
  twitterDescription(locale: String): String
  twitterTitle(locale: String): String
}

type ComponentSeoCollection {
  items: [ComponentSeo]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentSeoFilter {
  AND: [ComponentSeoFilter]
  OR: [ComponentSeoFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  metaDescription: String
  metaDescription_contains: String
  metaDescription_exists: Boolean
  metaDescription_in: [String]
  metaDescription_not: String
  metaDescription_not_contains: String
  metaDescription_not_in: [String]
  metaTitle: String
  metaTitle_contains: String
  metaTitle_exists: Boolean
  metaTitle_in: [String]
  metaTitle_not: String
  metaTitle_not_contains: String
  metaTitle_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  openGraphDescription: String
  openGraphDescription_contains: String
  openGraphDescription_exists: Boolean
  openGraphDescription_in: [String]
  openGraphDescription_not: String
  openGraphDescription_not_contains: String
  openGraphDescription_not_in: [String]
  openGraphImage_exists: Boolean
  openGraphTitle: String
  openGraphTitle_contains: String
  openGraphTitle_exists: Boolean
  openGraphTitle_in: [String]
  openGraphTitle_not: String
  openGraphTitle_not_contains: String
  openGraphTitle_not_in: [String]
  robotsFollow: Boolean
  robotsFollow_exists: Boolean
  robotsFollow_not: Boolean
  robotsIndex: Boolean
  robotsIndex_exists: Boolean
  robotsIndex_not: Boolean
  schemaJsonLd: String
  schemaJsonLd_contains: String
  schemaJsonLd_exists: Boolean
  schemaJsonLd_in: [String]
  schemaJsonLd_not: String
  schemaJsonLd_not_contains: String
  schemaJsonLd_not_in: [String]
  schemaType: String
  schemaType_contains: String
  schemaType_exists: Boolean
  schemaType_in: [String]
  schemaType_not: String
  schemaType_not_contains: String
  schemaType_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  twitterCardType: String
  twitterCardType_contains: String
  twitterCardType_exists: Boolean
  twitterCardType_in: [String]
  twitterCardType_not: String
  twitterCardType_not_contains: String
  twitterCardType_not_in: [String]
  twitterDescription: String
  twitterDescription_contains: String
  twitterDescription_exists: Boolean
  twitterDescription_in: [String]
  twitterDescription_not: String
  twitterDescription_not_contains: String
  twitterDescription_not_in: [String]
  twitterTitle: String
  twitterTitle_contains: String
  twitterTitle_exists: Boolean
  twitterTitle_in: [String]
  twitterTitle_not: String
  twitterTitle_not_contains: String
  twitterTitle_not_in: [String]
}

type ComponentSeoLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentSeoOrder {
  canonicalUrl_ASC
  canonicalUrl_DESC
  metaTitle_ASC
  metaTitle_DESC
  name_ASC
  name_DESC
  openGraphTitle_ASC
  openGraphTitle_DESC
  robotsFollow_ASC
  robotsFollow_DESC
  robotsIndex_ASC
  robotsIndex_DESC
  schemaType_ASC
  schemaType_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  twitterCardType_ASC
  twitterCardType_DESC
  twitterTitle_ASC
  twitterTitle_DESC
}

"""
A component to represent a service offered by the organization. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentService)
"""
type ComponentService implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  ctaLink(locale: String): String
  ctaText(locale: String): String
  description(locale: String): String
  icon(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentServiceLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type ComponentServiceCollection {
  items: [ComponentService]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentServiceFilter {
  AND: [ComponentServiceFilter]
  OR: [ComponentServiceFilter]
  contentfulMetadata: ContentfulMetadataFilter
  ctaLink: String
  ctaLink_contains: String
  ctaLink_exists: Boolean
  ctaLink_in: [String]
  ctaLink_not: String
  ctaLink_not_contains: String
  ctaLink_not_in: [String]
  ctaText: String
  ctaText_contains: String
  ctaText_exists: Boolean
  ctaText_in: [String]
  ctaText_not: String
  ctaText_not_contains: String
  ctaText_not_in: [String]
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  icon_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ComponentServiceLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentServiceOrder {
  ctaLink_ASC
  ctaLink_DESC
  ctaText_ASC
  ctaText_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
A component to display an overview of a service. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentServiceOverview)
"""
type ComponentServiceOverview implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  ctaLink(locale: String): String
  ctaText(locale: String): String
  description(locale: String): String
  icon(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentServiceOverviewLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type ComponentServiceOverviewCollection {
  items: [ComponentServiceOverview]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentServiceOverviewFilter {
  AND: [ComponentServiceOverviewFilter]
  OR: [ComponentServiceOverviewFilter]
  contentfulMetadata: ContentfulMetadataFilter
  ctaLink: String
  ctaLink_contains: String
  ctaLink_exists: Boolean
  ctaLink_in: [String]
  ctaLink_not: String
  ctaLink_not_contains: String
  ctaLink_not_in: [String]
  ctaText: String
  ctaText_contains: String
  ctaText_exists: Boolean
  ctaText_in: [String]
  ctaText_not: String
  ctaText_not_contains: String
  ctaText_not_in: [String]
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  icon_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ComponentServiceOverviewLinkingCollections {
  componentSectionCollection(limit: Int = 100, locale: String, order: [ComponentServiceOverviewLinkingCollectionsComponentSectionCollectionOrder], preview: Boolean, skip: Int = 0): ComponentSectionCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageServiceCollection(limit: Int = 100, locale: String, order: [ComponentServiceOverviewLinkingCollectionsPageServiceCollectionOrder], preview: Boolean, skip: Int = 0): PageServiceCollection
}

enum ComponentServiceOverviewLinkingCollectionsComponentSectionCollectionOrder {
  internalName_ASC
  internalName_DESC
  subtitle_ASC
  subtitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentServiceOverviewLinkingCollectionsPageServiceCollectionOrder {
  internalName_ASC
  internalName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentServiceOverviewOrder {
  ctaLink_ASC
  ctaLink_DESC
  ctaText_ASC
  ctaText_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
A single step in a process or workflow. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentStep)
"""
type ComponentStep implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  icon(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentStepLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type ComponentStepCollection {
  items: [ComponentStep]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentStepFilter {
  AND: [ComponentStepFilter]
  OR: [ComponentStepFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  icon_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ComponentStepLinkingCollections {
  componentProcessCollection(limit: Int = 100, locale: String, order: [ComponentStepLinkingCollectionsComponentProcessCollectionOrder], preview: Boolean, skip: Int = 0): ComponentProcessCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentStepLinkingCollectionsComponentProcessCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentStepOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
A component to showcase client testimonials or success stories. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/ComponentTestimonial)
"""
type ComponentTestimonial implements Entry & _Node {
  _id: ID!
  clientImage(locale: String, preview: Boolean): Asset
  clientName(locale: String): String
  clientPosition(locale: String): String
  company(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentTestimonialLinkingCollections
  quote(locale: String): String
  sys: Sys!
  testimonialDate(locale: String): DateTime
}

type ComponentTestimonialCollection {
  items: [ComponentTestimonial]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentTestimonialFilter {
  AND: [ComponentTestimonialFilter]
  OR: [ComponentTestimonialFilter]
  clientImage_exists: Boolean
  clientName: String
  clientName_contains: String
  clientName_exists: Boolean
  clientName_in: [String]
  clientName_not: String
  clientName_not_contains: String
  clientName_not_in: [String]
  clientPosition: String
  clientPosition_contains: String
  clientPosition_exists: Boolean
  clientPosition_in: [String]
  clientPosition_not: String
  clientPosition_not_contains: String
  clientPosition_not_in: [String]
  company: String
  company_contains: String
  company_exists: Boolean
  company_in: [String]
  company_not: String
  company_not_contains: String
  company_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  quote: String
  quote_contains: String
  quote_exists: Boolean
  quote_in: [String]
  quote_not: String
  quote_not_contains: String
  quote_not_in: [String]
  sys: SysFilter
  testimonialDate: DateTime
  testimonialDate_exists: Boolean
  testimonialDate_gt: DateTime
  testimonialDate_gte: DateTime
  testimonialDate_in: [DateTime]
  testimonialDate_lt: DateTime
  testimonialDate_lte: DateTime
  testimonialDate_not: DateTime
  testimonialDate_not_in: [DateTime]
}

type ComponentTestimonialLinkingCollections {
  componentSectionCollection(limit: Int = 100, locale: String, order: [ComponentTestimonialLinkingCollectionsComponentSectionCollectionOrder], preview: Boolean, skip: Int = 0): ComponentSectionCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageServiceCollection(limit: Int = 100, locale: String, order: [ComponentTestimonialLinkingCollectionsPageServiceCollectionOrder], preview: Boolean, skip: Int = 0): PageServiceCollection
}

enum ComponentTestimonialLinkingCollectionsComponentSectionCollectionOrder {
  internalName_ASC
  internalName_DESC
  subtitle_ASC
  subtitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentTestimonialLinkingCollectionsPageServiceCollectionOrder {
  internalName_ASC
  internalName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentTestimonialOrder {
  clientName_ASC
  clientName_DESC
  clientPosition_ASC
  clientPosition_DESC
  company_ASC
  company_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  testimonialDate_ASC
  testimonialDate_DESC
}

type ContentfulMetadata {
  concepts: [TaxonomyConcept]!
  tags: [ContentfulTag]!
}

input ContentfulMetadataConceptsDescendantsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

input ContentfulMetadataConceptsFilter {
  descendants: ContentfulMetadataConceptsDescendantsFilter
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

input ContentfulMetadataFilter {
  concepts: ContentfulMetadataConceptsFilter
  concepts_exists: Boolean
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
      Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
A content type for individual blog posts. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/PageBlogPost)
"""
type PageBlogPost implements Entry & _Node {
  _id: ID!
  author(locale: String, preview: Boolean, where: ComponentAuthorFilter): ComponentAuthor
  callToAction(locale: String, preview: Boolean, where: ComponentCtaFilter): ComponentCta
  content(locale: String): PageBlogPostContent
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  featured(locale: String): Boolean
  featuredImage(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageBlogPostLinkingCollections
  publishedDate(locale: String): DateTime
  relatedPostsCollection(limit: Int = 100, locale: String, order: [PageBlogPostRelatedPostsCollectionOrder], preview: Boolean, skip: Int = 0, where: PageBlogPostFilter): PageBlogPostRelatedPostsCollection
  seo(locale: String, preview: Boolean): Entry
  slug(locale: String): String
  sys: Sys!
  tags(locale: String): [String]
  title(locale: String): String
}

type PageBlogPostCollection {
  items: [PageBlogPost]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageBlogPostContent {
  json: JSON!
  links: PageBlogPostContentLinks!
}

type PageBlogPostContentAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageBlogPostContentEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageBlogPostContentLinks {
  assets: PageBlogPostContentAssets!
  entries: PageBlogPostContentEntries!
  resources: PageBlogPostContentResources!
}

type PageBlogPostContentResources {
  block: [PageBlogPostContentResourcesBlock!]!
  hyperlink: [PageBlogPostContentResourcesHyperlink!]!
  inline: [PageBlogPostContentResourcesInline!]!
}

type PageBlogPostContentResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type PageBlogPostContentResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type PageBlogPostContentResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input PageBlogPostFilter {
  AND: [PageBlogPostFilter]
  OR: [PageBlogPostFilter]
  author: cfComponentAuthorNestedFilter
  author_exists: Boolean
  callToAction: cfComponentCtaNestedFilter
  callToAction_exists: Boolean
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  featured: Boolean
  featuredImage_exists: Boolean
  featured_exists: Boolean
  featured_not: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  publishedDate: DateTime
  publishedDate_exists: Boolean
  publishedDate_gt: DateTime
  publishedDate_gte: DateTime
  publishedDate_in: [DateTime]
  publishedDate_lt: DateTime
  publishedDate_lte: DateTime
  publishedDate_not: DateTime
  publishedDate_not_in: [DateTime]
  relatedPosts: cfPageBlogPostNestedFilter
  relatedPostsCollection_exists: Boolean
  seo_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  tags_contains_all: [String]
  tags_contains_none: [String]
  tags_contains_some: [String]
  tags_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PageBlogPostLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [PageBlogPostLinkingCollectionsPageBlogPostCollectionOrder], preview: Boolean, skip: Int = 0): PageBlogPostCollection
}

enum PageBlogPostLinkingCollectionsPageBlogPostCollectionOrder {
  description_ASC
  description_DESC
  featured_ASC
  featured_DESC
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum PageBlogPostOrder {
  description_ASC
  description_DESC
  featured_ASC
  featured_DESC
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type PageBlogPostRelatedPostsCollection {
  items: [PageBlogPost]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageBlogPostRelatedPostsCollectionOrder {
  description_ASC
  description_DESC
  featured_ASC
  featured_DESC
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
The homepage of the website. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/PageHome)
"""
type PageHome implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  cta(locale: String, preview: Boolean, where: ComponentCtaFilter): ComponentCta
  featuresCollection(limit: Int = 100, locale: String, order: [PageHomeFeaturesCollectionOrder], preview: Boolean, skip: Int = 0, where: ComponentFeatureFilter): PageHomeFeaturesCollection
  hero(locale: String, preview: Boolean, where: ComponentHeroFilter): ComponentHero
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageHomeLinkingCollections
  process(locale: String, preview: Boolean, where: ComponentProcessFilter): ComponentProcess
  seo(locale: String, preview: Boolean): Entry
  slug(locale: String): String
  sys: Sys!
}

type PageHomeCollection {
  items: [PageHome]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageHomeFeaturesCollection {
  items: [ComponentFeature]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageHomeFeaturesCollectionOrder {
  internalName_ASC
  internalName_DESC
  linkHref_ASC
  linkHref_DESC
  linkText_ASC
  linkText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

input PageHomeFilter {
  AND: [PageHomeFilter]
  OR: [PageHomeFilter]
  contentfulMetadata: ContentfulMetadataFilter
  cta: cfComponentCtaNestedFilter
  cta_exists: Boolean
  features: cfComponentFeatureNestedFilter
  featuresCollection_exists: Boolean
  hero: cfComponentHeroNestedFilter
  hero_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  process: cfComponentProcessNestedFilter
  process_exists: Boolean
  seo_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}

type PageHomeLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PageHomeOrder {
  internalName_ASC
  internalName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
A page to showcase a specific service offered by the organization. [See type definition](https://app.contentful.com/spaces/fs5tsm2181s6/content_types/PageService)
"""
type PageService implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  cta(locale: String, preview: Boolean, where: ComponentCtaFilter): ComponentCta
  description(locale: String): String
  faqsCollection(limit: Int = 100, locale: String, order: [PageServiceFaqsCollectionOrder], preview: Boolean, skip: Int = 0, where: ComponentFaqFilter): PageServiceFaqsCollection
  featuredImage(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageServiceLinkingCollections
  seo(locale: String, preview: Boolean): Entry
  serviceOverview(locale: String, preview: Boolean, where: ComponentServiceOverviewFilter): ComponentServiceOverview
  slug(locale: String): String
  sys: Sys!
  testimonialsCollection(limit: Int = 100, locale: String, order: [PageServiceTestimonialsCollectionOrder], preview: Boolean, skip: Int = 0, where: ComponentTestimonialFilter): PageServiceTestimonialsCollection
  title(locale: String): String
}

type PageServiceCollection {
  items: [PageService]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageServiceFaqsCollection {
  items: [ComponentFaq]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageServiceFaqsCollectionOrder {
  internalName_ASC
  internalName_DESC
  question_ASC
  question_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input PageServiceFilter {
  AND: [PageServiceFilter]
  OR: [PageServiceFilter]
  contentfulMetadata: ContentfulMetadataFilter
  cta: cfComponentCtaNestedFilter
  cta_exists: Boolean
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  faqs: cfComponentFaqNestedFilter
  faqsCollection_exists: Boolean
  featuredImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  seo_exists: Boolean
  serviceOverview: cfComponentServiceOverviewNestedFilter
  serviceOverview_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  testimonials: cfComponentTestimonialNestedFilter
  testimonialsCollection_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PageServiceLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PageServiceOrder {
  internalName_ASC
  internalName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type PageServiceTestimonialsCollection {
  items: [ComponentTestimonial]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageServiceTestimonialsCollectionOrder {
  clientName_ASC
  clientName_DESC
  clientPosition_ASC
  clientPosition_DESC
  company_ASC
  company_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  testimonialDate_ASC
  testimonialDate_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  _node(id: ID!, locale: String, preview: Boolean): _Node
  appSettings(id: String!, locale: String, preview: Boolean): AppSettings
  appSettingsCollection(limit: Int = 100, locale: String, order: [AppSettingsOrder], preview: Boolean, skip: Int = 0, where: AppSettingsFilter): AppSettingsCollection
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  componentAuthor(id: String!, locale: String, preview: Boolean): ComponentAuthor
  componentAuthorCollection(limit: Int = 100, locale: String, order: [ComponentAuthorOrder], preview: Boolean, skip: Int = 0, where: ComponentAuthorFilter): ComponentAuthorCollection
  componentCta(id: String!, locale: String, preview: Boolean): ComponentCta
  componentCtaCollection(limit: Int = 100, locale: String, order: [ComponentCtaOrder], preview: Boolean, skip: Int = 0, where: ComponentCtaFilter): ComponentCtaCollection
  componentFaq(id: String!, locale: String, preview: Boolean): ComponentFaq
  componentFaqCollection(limit: Int = 100, locale: String, order: [ComponentFaqOrder], preview: Boolean, skip: Int = 0, where: ComponentFaqFilter): ComponentFaqCollection
  componentFeature(id: String!, locale: String, preview: Boolean): ComponentFeature
  componentFeatureCollection(limit: Int = 100, locale: String, order: [ComponentFeatureOrder], preview: Boolean, skip: Int = 0, where: ComponentFeatureFilter): ComponentFeatureCollection
  componentHero(id: String!, locale: String, preview: Boolean): ComponentHero
  componentHeroCollection(limit: Int = 100, locale: String, order: [ComponentHeroOrder], preview: Boolean, skip: Int = 0, where: ComponentHeroFilter): ComponentHeroCollection
  componentImageGallery(id: String!, locale: String, preview: Boolean): ComponentImageGallery
  componentImageGalleryCollection(limit: Int = 100, locale: String, order: [ComponentImageGalleryOrder], preview: Boolean, skip: Int = 0, where: ComponentImageGalleryFilter): ComponentImageGalleryCollection
  componentLink(id: String!, locale: String, preview: Boolean): ComponentLink
  componentLinkCollection(limit: Int = 100, locale: String, order: [ComponentLinkOrder], preview: Boolean, skip: Int = 0, where: ComponentLinkFilter): ComponentLinkCollection
  componentNavigation(id: String!, locale: String, preview: Boolean): ComponentNavigation
  componentNavigationCollection(limit: Int = 100, locale: String, order: [ComponentNavigationOrder], preview: Boolean, skip: Int = 0, where: ComponentNavigationFilter): ComponentNavigationCollection
  componentNavigationItem(id: String!, locale: String, preview: Boolean): ComponentNavigationItem
  componentNavigationItemCollection(limit: Int = 100, locale: String, order: [ComponentNavigationItemOrder], preview: Boolean, skip: Int = 0, where: ComponentNavigationItemFilter): ComponentNavigationItemCollection
  componentProcess(id: String!, locale: String, preview: Boolean): ComponentProcess
  componentProcessCollection(limit: Int = 100, locale: String, order: [ComponentProcessOrder], preview: Boolean, skip: Int = 0, where: ComponentProcessFilter): ComponentProcessCollection
  componentSection(id: String!, locale: String, preview: Boolean): ComponentSection
  componentSectionCollection(limit: Int = 100, locale: String, order: [ComponentSectionOrder], preview: Boolean, skip: Int = 0, where: ComponentSectionFilter): ComponentSectionCollection
  componentSeo(id: String!, locale: String, preview: Boolean): ComponentSeo
  componentSeoCollection(limit: Int = 100, locale: String, order: [ComponentSeoOrder], preview: Boolean, skip: Int = 0, where: ComponentSeoFilter): ComponentSeoCollection
  componentService(id: String!, locale: String, preview: Boolean): ComponentService
  componentServiceCollection(limit: Int = 100, locale: String, order: [ComponentServiceOrder], preview: Boolean, skip: Int = 0, where: ComponentServiceFilter): ComponentServiceCollection
  componentServiceOverview(id: String!, locale: String, preview: Boolean): ComponentServiceOverview
  componentServiceOverviewCollection(limit: Int = 100, locale: String, order: [ComponentServiceOverviewOrder], preview: Boolean, skip: Int = 0, where: ComponentServiceOverviewFilter): ComponentServiceOverviewCollection
  componentStep(id: String!, locale: String, preview: Boolean): ComponentStep
  componentStepCollection(limit: Int = 100, locale: String, order: [ComponentStepOrder], preview: Boolean, skip: Int = 0, where: ComponentStepFilter): ComponentStepCollection
  componentTestimonial(id: String!, locale: String, preview: Boolean): ComponentTestimonial
  componentTestimonialCollection(limit: Int = 100, locale: String, order: [ComponentTestimonialOrder], preview: Boolean, skip: Int = 0, where: ComponentTestimonialFilter): ComponentTestimonialCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  pageBlogPost(id: String!, locale: String, preview: Boolean): PageBlogPost
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [PageBlogPostOrder], preview: Boolean, skip: Int = 0, where: PageBlogPostFilter): PageBlogPostCollection
  pageHome(id: String!, locale: String, preview: Boolean): PageHome
  pageHomeCollection(limit: Int = 100, locale: String, order: [PageHomeOrder], preview: Boolean, skip: Int = 0, where: PageHomeFilter): PageHomeCollection
  pageService(id: String!, locale: String, preview: Boolean): PageService
  pageServiceCollection(limit: Int = 100, locale: String, order: [PageServiceOrder], preview: Boolean, skip: Int = 0, where: PageServiceFilter): PageServiceCollection
  __schema: __Schema!
  __type(name: String!): __Type
}

interface ResourceLink {
  sys: ResourceSys!
}

type ResourceSys {
  linkType: String!
  urn: String!
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!

  """The locale that was requested."""
  locale: String
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
Represents a taxonomy concept entity for finding and organizing content easily.
        Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-concepts
"""
type TaxonomyConcept {
  id: String
}

interface _Node {
  _id: ID!
}

input cfComponentAuthorNestedFilter {
  AND: [cfComponentAuthorNestedFilter]
  OR: [cfComponentAuthorNestedFilter]
  bio: String
  bio_contains: String
  bio_exists: Boolean
  bio_in: [String]
  bio_not: String
  bio_not_contains: String
  bio_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  profilePicture_exists: Boolean
  socialLinksCollection_exists: Boolean
  sys: SysFilter
}

input cfComponentCtaNestedFilter {
  AND: [cfComponentCtaNestedFilter]
  OR: [cfComponentCtaNestedFilter]
  backgroundImage_exists: Boolean
  buttonLink: String
  buttonLink_contains: String
  buttonLink_exists: Boolean
  buttonLink_in: [String]
  buttonLink_not: String
  buttonLink_not_contains: String
  buttonLink_not_in: [String]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  heading: String
  heading_contains: String
  heading_exists: Boolean
  heading_in: [String]
  heading_not: String
  heading_not_contains: String
  heading_not_in: [String]
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  subheading: String
  subheading_contains: String
  subheading_exists: Boolean
  subheading_in: [String]
  subheading_not: String
  subheading_not_contains: String
  subheading_not_in: [String]
  sys: SysFilter
}

input cfComponentFaqNestedFilter {
  AND: [cfComponentFaqNestedFilter]
  OR: [cfComponentFaqNestedFilter]
  answer: String
  answer_contains: String
  answer_exists: Boolean
  answer_in: [String]
  answer_not: String
  answer_not_contains: String
  answer_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  question: String
  question_contains: String
  question_exists: Boolean
  question_in: [String]
  question_not: String
  question_not_contains: String
  question_not_in: [String]
  sys: SysFilter
}

input cfComponentFeatureNestedFilter {
  AND: [cfComponentFeatureNestedFilter]
  OR: [cfComponentFeatureNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  icon_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  linkHref: String
  linkHref_contains: String
  linkHref_exists: Boolean
  linkHref_in: [String]
  linkHref_not: String
  linkHref_not_contains: String
  linkHref_not_in: [String]
  linkText: String
  linkText_contains: String
  linkText_exists: Boolean
  linkText_in: [String]
  linkText_not: String
  linkText_not_contains: String
  linkText_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfComponentHeroNestedFilter {
  AND: [cfComponentHeroNestedFilter]
  OR: [cfComponentHeroNestedFilter]
  backgroundImage_exists: Boolean
  callToAction_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  heading: String
  heading_contains: String
  heading_exists: Boolean
  heading_in: [String]
  heading_not: String
  heading_not_contains: String
  heading_not_in: [String]
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  subheading: String
  subheading_contains: String
  subheading_exists: Boolean
  subheading_in: [String]
  subheading_not: String
  subheading_not_contains: String
  subheading_not_in: [String]
  sys: SysFilter
}

input cfComponentLinkNestedFilter {
  AND: [cfComponentLinkNestedFilter]
  OR: [cfComponentLinkNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  displayText: String
  displayText_contains: String
  displayText_exists: Boolean
  displayText_in: [String]
  displayText_not: String
  displayText_not_contains: String
  displayText_not_in: [String]
  href: String
  href_contains: String
  href_exists: Boolean
  href_in: [String]
  href_not: String
  href_not_contains: String
  href_not_in: [String]
  image_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

input cfComponentNavigationItemNestedFilter {
  AND: [cfComponentNavigationItemNestedFilter]
  OR: [cfComponentNavigationItemNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  icon_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}

input cfComponentNavigationNestedFilter {
  AND: [cfComponentNavigationNestedFilter]
  OR: [cfComponentNavigationNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  itemsCollection_exists: Boolean
  location: String
  location_contains: String
  location_exists: Boolean
  location_in: [String]
  location_not: String
  location_not_contains: String
  location_not_in: [String]
  sys: SysFilter
}

input cfComponentProcessNestedFilter {
  AND: [cfComponentProcessNestedFilter]
  OR: [cfComponentProcessNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  stepsCollection_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfComponentServiceOverviewNestedFilter {
  AND: [cfComponentServiceOverviewNestedFilter]
  OR: [cfComponentServiceOverviewNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  ctaLink: String
  ctaLink_contains: String
  ctaLink_exists: Boolean
  ctaLink_in: [String]
  ctaLink_not: String
  ctaLink_not_contains: String
  ctaLink_not_in: [String]
  ctaText: String
  ctaText_contains: String
  ctaText_exists: Boolean
  ctaText_in: [String]
  ctaText_not: String
  ctaText_not_contains: String
  ctaText_not_in: [String]
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  icon_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfComponentStepNestedFilter {
  AND: [cfComponentStepNestedFilter]
  OR: [cfComponentStepNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  icon_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfComponentTestimonialNestedFilter {
  AND: [cfComponentTestimonialNestedFilter]
  OR: [cfComponentTestimonialNestedFilter]
  clientImage_exists: Boolean
  clientName: String
  clientName_contains: String
  clientName_exists: Boolean
  clientName_in: [String]
  clientName_not: String
  clientName_not_contains: String
  clientName_not_in: [String]
  clientPosition: String
  clientPosition_contains: String
  clientPosition_exists: Boolean
  clientPosition_in: [String]
  clientPosition_not: String
  clientPosition_not_contains: String
  clientPosition_not_in: [String]
  company: String
  company_contains: String
  company_exists: Boolean
  company_in: [String]
  company_not: String
  company_not_contains: String
  company_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  quote: String
  quote_contains: String
  quote_exists: Boolean
  quote_in: [String]
  quote_not: String
  quote_not_contains: String
  quote_not_in: [String]
  sys: SysFilter
  testimonialDate: DateTime
  testimonialDate_exists: Boolean
  testimonialDate_gt: DateTime
  testimonialDate_gte: DateTime
  testimonialDate_in: [DateTime]
  testimonialDate_lt: DateTime
  testimonialDate_lte: DateTime
  testimonialDate_not: DateTime
  testimonialDate_not_in: [DateTime]
}

input cfPageBlogPostNestedFilter {
  AND: [cfPageBlogPostNestedFilter]
  OR: [cfPageBlogPostNestedFilter]
  author_exists: Boolean
  callToAction_exists: Boolean
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  featured: Boolean
  featuredImage_exists: Boolean
  featured_exists: Boolean
  featured_not: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  publishedDate: DateTime
  publishedDate_exists: Boolean
  publishedDate_gt: DateTime
  publishedDate_gte: DateTime
  publishedDate_in: [DateTime]
  publishedDate_lt: DateTime
  publishedDate_lte: DateTime
  publishedDate_not: DateTime
  publishedDate_not_in: [DateTime]
  relatedPostsCollection_exists: Boolean
  seo_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  tags_contains_all: [String]
  tags_contains_none: [String]
  tags_contains_some: [String]
  tags_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfcomponentsMultiTypeNestedFilter {
  AND: [cfcomponentsMultiTypeNestedFilter]
  OR: [cfcomponentsMultiTypeNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}